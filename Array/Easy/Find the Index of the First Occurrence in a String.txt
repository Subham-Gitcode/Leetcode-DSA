----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28. Find the Index of the First Occurrence in a String
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution-(0ms)
class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.isEmpty()){
            return 0;
        }
        // Get lengths of both strings
        int haystackLength = haystack.length();
        int needleLength = needle.length();

        // If needle is longer than haystack, it cannot exist in haystack
        if (needleLength > haystackLength) {
            return -1;
        }

        // Sliding window approach to compare substrings
        for (int i = 0; i <= haystackLength - needleLength; i++) {
            // Check if substring of haystack matches the needle
            if (haystack.substring(i, i + needleLength).equals(needle)) {
                return i;
            }
        }

        // If no match is found, return -1
        return -1;
    }
}






---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------